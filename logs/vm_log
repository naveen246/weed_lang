{"DEF_MAIN"=>1, "L0"=>8, "L1"=>33, "L2"=>43, "L3"=>45}
step_through
parse_and_exec 	WRITE_STR Enter a number to check if it is a palindrome or not\n
WRITE_STR
parse_and_exec 	READ_NUM n
READ_NUM
parse_and_exec 	MOV n,@R0
MOV
parse_and_exec 	MOV @R0,temp
MOV
parse_and_exec 	MOV #0,@R0
MOV
parse_and_exec 	MOV @R0,reverse
MOV
parse_and_exec 	MOV temp,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #0,@R0
MOV
parse_and_exec 	CMP (SP)+,@R0, !=
CMP
cmp 121 != 0
true
parse_and_exec 	JIF L1
JIF
parse_and_exec 	MOV reverse,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #10,@R0
MOV
parse_and_exec 	MUL (SP)+,@R0
MUL
parse_and_exec 	MOV @R0,reverse
MOV
parse_and_exec 	MOV reverse,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV temp,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #10,@R0
MOV
parse_and_exec 	MOD (SP)+, @R0
MOD
parse_and_exec 	ADD (SP)+,@R0
ADD
parse_and_exec 	MOV @R0,reverse
MOV
parse_and_exec 	MOV temp,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #10,@R0
MOV
parse_and_exec 	DIV (SP)+, @R0
DIV
parse_and_exec 	MOV @R0,temp
MOV
parse_and_exec 	JMP L0
JMP
parse_and_exec 	MOV temp,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #0,@R0
MOV
parse_and_exec 	CMP (SP)+,@R0, !=
CMP
cmp 12 != 0
true
parse_and_exec 	JIF L1
JIF
parse_and_exec 	MOV reverse,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #10,@R0
MOV
parse_and_exec 	MUL (SP)+,@R0
MUL
parse_and_exec 	MOV @R0,reverse
MOV
parse_and_exec 	MOV reverse,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV temp,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #10,@R0
MOV
parse_and_exec 	MOD (SP)+, @R0
MOD
parse_and_exec 	ADD (SP)+,@R0
ADD
parse_and_exec 	MOV @R0,reverse
MOV
parse_and_exec 	MOV temp,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #10,@R0
MOV
parse_and_exec 	DIV (SP)+, @R0
DIV
parse_and_exec 	MOV @R0,temp
MOV
parse_and_exec 	JMP L0
JMP
parse_and_exec 	MOV temp,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #0,@R0
MOV
parse_and_exec 	CMP (SP)+,@R0, !=
CMP
cmp 1 != 0
true
parse_and_exec 	JIF L1
JIF
parse_and_exec 	MOV reverse,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #10,@R0
MOV
parse_and_exec 	MUL (SP)+,@R0
MUL
parse_and_exec 	MOV @R0,reverse
MOV
parse_and_exec 	MOV reverse,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV temp,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #10,@R0
MOV
parse_and_exec 	MOD (SP)+, @R0
MOD
parse_and_exec 	ADD (SP)+,@R0
ADD
parse_and_exec 	MOV @R0,reverse
MOV
parse_and_exec 	MOV temp,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #10,@R0
MOV
parse_and_exec 	DIV (SP)+, @R0
DIV
parse_and_exec 	MOV @R0,temp
MOV
parse_and_exec 	JMP L0
JMP
parse_and_exec 	MOV temp,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV #0,@R0
MOV
parse_and_exec 	CMP (SP)+,@R0, !=
CMP
cmp 0 != 0
false
parse_and_exec 	JIF L1
JIF
parse_and_exec 	MOV n,@R0
MOV
parse_and_exec 	WRITE_NUM @R0
WRITE_NUM
parse_and_exec 	MOV n,@R0
MOV
parse_and_exec 	MOV @R0,-(SP)
MOV
parse_and_exec 	MOV reverse,@R0
MOV
parse_and_exec 	CMP (SP)+,@R0, ==
CMP
cmp 121 == 121
true
parse_and_exec 	JIF L2
JIF
parse_and_exec 	WRITE_STR  is a palindrome number
WRITE_STR
parse_and_exec 	JMP L3
JMP
