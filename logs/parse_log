get_char: 0 
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 1 d
get_char: 2 e
get_char: 3 f
get_char: 4  
skip_white_space
get_char: 5 m
read_name token: def
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 6 a
get_char: 7 i
get_char: 8 n
get_char: 9 (
skip_white_space
read_name token: main
match_string main
match_char: (
skip_white_space
get_char: 10 )
match_char: ( - matched
match_char: )
skip_white_space
get_char: 11 
match_char: ) - matched
block
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 12  
get_char: 13  
get_char: 14 r
get_char: 15 e
get_char: 16 a
get_char: 17 d
get_char: 18 (
skip_white_space
read_name token: read
do_read
read_write
match_char: (
skip_white_space
get_char: 19 n
match_char: ( - matched
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 20 )
skip_white_space
read_name token: n
								READ_NUM n
match_char: )
skip_white_space
get_char: 21 
match_char: ) - matched
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 22  
get_char: 23  
get_char: 24 i
get_char: 25 f
get_char: 26  
skip_white_space
get_char: 27 n
read_name token: if
do_if
new_label
bool_expression
bool_term
not_factor
relation
expression
first_term
first_factor
factor
skip_white_space
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 28  
skip_white_space
get_char: 29 <
read_name token: n
								MOV n,@R0
next_term
								MOV @R0,-(SP)
less
match_char: <
skip_white_space
get_char: 30 =
match_char: < - matched
match_char: =
skip_white_space
get_char: 31  
match_char: = - matched
expression
first_term
first_factor
factor
skip_white_space
get_char: 32 1
read_number
read_token: Number, (?-mix:\d)
skip_white_space
get_char: 33 
skip_white_space
get_char: 34  
get_char: 35  
get_char: 36  
get_char: 37  
get_char: 38 w
								MOV #1,@R0
next_term
								CMP (SP)+,@R0, <=
								JIF L0
block
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 39 r
get_char: 40 i
get_char: 41 t
get_char: 42 e
get_char: 43 (
skip_white_space
read_name token: write
do_write
read_write
match_char: (
skip_white_space
get_char: 44 1
match_char: ( - matched
expression
first_term
first_factor
factor
skip_white_space
read_number
read_token: Number, (?-mix:\d)
skip_white_space
get_char: 45 )
skip_white_space
								MOV #1,@R0
next_term
								WRITE_NUM @R0
match_char: )
skip_white_space
get_char: 46 
match_char: ) - matched
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 47  
get_char: 48  
get_char: 49 e
get_char: 50 l
get_char: 51 s
get_char: 52 e
get_char: 53 
skip_white_space
get_char: 54  
get_char: 55  
get_char: 56  
get_char: 57  
get_char: 58 i
read_name token: else
new_label
								JMP L1
block
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 59  
skip_white_space
get_char: 60 =
read_name token: i
assignment
match_char: =
skip_white_space
get_char: 61  
match_char: = - matched
bool_expression
bool_term
not_factor
relation
expression
first_term
first_factor
factor
skip_white_space
get_char: 62 n
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 63  
skip_white_space
get_char: 64 +
read_name token: n
								MOV n,@R0
next_term
								MOV @R0,-(SP)
add
match_char: +
skip_white_space
get_char: 65  
match_char: + - matched
term
factor
skip_white_space
get_char: 66 (
match_char: (
skip_white_space
get_char: 67 3
match_char: ( - matched
bool_expression
bool_term
not_factor
relation
expression
first_term
first_factor
factor
skip_white_space
read_number
read_token: Number, (?-mix:\d)
skip_white_space
get_char: 68  
skip_white_space
get_char: 69 *
								MOV #3,@R0
next_term
								MOV @R0,-(SP)
multiply
match_char: *
skip_white_space
get_char: 70  
match_char: * - matched
factor
skip_white_space
get_char: 71 5
read_number
read_token: Number, (?-mix:\d)
skip_white_space
get_char: 72 )
skip_white_space
								MOV #5,@R0
								MUL (SP)+,@R0
match_char: )
skip_white_space
get_char: 73 
match_char: ) - matched
next_term
								ADD (SP)+,@R0
								MOV @R0,i
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 74  
get_char: 75  
get_char: 76  
get_char: 77  
get_char: 78 f
get_char: 79  
skip_white_space
get_char: 80 =
read_name token: f
assignment
match_char: =
skip_white_space
get_char: 81  
match_char: = - matched
bool_expression
bool_term
not_factor
relation
expression
first_term
first_factor
factor
skip_white_space
get_char: 82 5
read_number
read_token: Number, (?-mix:\d)
skip_white_space
get_char: 83  
skip_white_space
get_char: 84 -
								MOV #5,@R0
next_term
								MOV @R0,-(SP)
subtract
match_char: -
skip_white_space
get_char: 85  
match_char: - - matched
term
factor
skip_white_space
get_char: 86 4
read_number
read_token: Number, (?-mix:\d)
skip_white_space
get_char: 87  
skip_white_space
get_char: 88 *
								MOV #4,@R0
next_term
								MOV @R0,-(SP)
multiply
match_char: *
skip_white_space
get_char: 89  
match_char: * - matched
factor
skip_white_space
get_char: 90 5
read_number
read_token: Number, (?-mix:\d)
skip_white_space
get_char: 91 
skip_white_space
get_char: 92  
get_char: 93  
get_char: 94  
get_char: 95  
get_char: 96 k
								MOV #5,@R0
								MUL (SP)+,@R0
								SUB (SP)+,@R0
								MOV @R0,f
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 97  
skip_white_space
get_char: 98 =
read_name token: k
assignment
match_char: =
skip_white_space
get_char: 99  
match_char: = - matched
bool_expression
bool_term
not_factor
relation
expression
first_term
first_factor
factor
skip_white_space
get_char: 100 6
read_number
read_token: Number, (?-mix:\d)
skip_white_space
get_char: 101 /
skip_white_space
								MOV #6,@R0
next_term
								MOV @R0,-(SP)
divide
match_char: /
skip_white_space
get_char: 102  
match_char: / - matched
factor
skip_white_space
get_char: 103 3
read_number
read_token: Number, (?-mix:\d)
skip_white_space
get_char: 104 
skip_white_space
get_char: 105  
get_char: 106  
get_char: 107  
get_char: 108  
get_char: 109 w
								MOV #3,@R0
								DIV (SP)+, @R0
								MOV @R0,k
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 110 h
get_char: 111 i
get_char: 112 l
get_char: 113 e
get_char: 114  
skip_white_space
get_char: 115 i
read_name token: while
do_while
new_label
new_label
bool_expression
bool_term
not_factor
relation
expression
first_term
first_factor
factor
skip_white_space
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 116  
skip_white_space
get_char: 117 >
read_name token: i
								MOV i,@R0
next_term
								MOV @R0,-(SP)
greater
match_char: >
skip_white_space
get_char: 118  
match_char: > - matched
expression
first_term
first_factor
factor
skip_white_space
get_char: 119 1
read_number
read_token: Number, (?-mix:\d)
skip_white_space
get_char: 120 
skip_white_space
get_char: 121  
get_char: 122  
get_char: 123  
get_char: 124  
get_char: 125  
get_char: 126  
get_char: 127 f
								MOV #1,@R0
next_term
								CMP (SP)+,@R0, >
								JIF L3
block
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 128  
skip_white_space
get_char: 129 =
read_name token: f
assignment
match_char: =
skip_white_space
get_char: 130  
match_char: = - matched
bool_expression
bool_term
not_factor
relation
expression
first_term
first_factor
factor
skip_white_space
get_char: 131 f
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 132  
skip_white_space
get_char: 133 *
read_name token: f
								MOV f,@R0
next_term
								MOV @R0,-(SP)
multiply
match_char: *
skip_white_space
get_char: 134  
match_char: * - matched
factor
skip_white_space
get_char: 135 i
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 136 
skip_white_space
get_char: 137  
get_char: 138  
get_char: 139  
get_char: 140  
get_char: 141  
get_char: 142  
get_char: 143 i
read_name token: i
								MOV i,@R0
								MUL (SP)+,@R0
								MOV @R0,f
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 144  
skip_white_space
get_char: 145 =
read_name token: i
assignment
match_char: =
skip_white_space
get_char: 146  
match_char: = - matched
bool_expression
bool_term
not_factor
relation
expression
first_term
first_factor
factor
skip_white_space
get_char: 147 i
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 148  
skip_white_space
get_char: 149 -
read_name token: i
								MOV i,@R0
next_term
								MOV @R0,-(SP)
subtract
match_char: -
skip_white_space
get_char: 150  
match_char: - - matched
term
factor
skip_white_space
get_char: 151 1
read_number
read_token: Number, (?-mix:\d)
skip_white_space
get_char: 152 
skip_white_space
get_char: 153  
get_char: 154  
get_char: 155  
get_char: 156  
get_char: 157 e
								MOV #1,@R0
next_term
								SUB (SP)+,@R0
								MOV @R0,i
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 158 n
get_char: 159 d
get_char: 160 
skip_white_space
get_char: 161  
get_char: 162  
get_char: 163  
get_char: 164  
get_char: 165 w
read_name token: end
match_string end
								JMP L2
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 166 r
get_char: 167 i
get_char: 168 t
get_char: 169 e
get_char: 170 (
skip_white_space
read_name token: write
do_write
read_write
match_char: (
skip_white_space
get_char: 171 f
match_char: ( - matched
expression
first_term
first_factor
factor
skip_white_space
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 172 )
skip_white_space
read_name token: f
								MOV f,@R0
next_term
								WRITE_NUM @R0
match_char: )
skip_white_space
get_char: 173 
match_char: ) - matched
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 174  
get_char: 175  
get_char: 176 e
get_char: 177 n
get_char: 178 d
get_char: 179 
skip_white_space
get_char: 180 e
read_name token: end
match_string end
read_name
read_token: Name, (?-mix:\w)
skip_white_space
get_char: 181 n
get_char: 182 d
get_char: 183 
skip_white_space
get_char: 184 
read_name token: end
match_string end
								END
